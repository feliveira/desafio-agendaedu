# .github/workflows/ci.yml

name: Test & Coverage

# Gatilho: Este workflow roda sempre que um Pull Request for aberto ou atualizado
# para a branch 'main'.
on:
  pull_request:
    branches: [ main ]

jobs:
  # Nome do job
  test-and-report-coverage:
    # Máquina virtual que será usada para rodar o job
    runs-on: ubuntu-latest
    permissions:
      checks: write 
      pull-requests: write
      contents: read

    steps:
      # 1. Checkout do código
      # Baixa o código do repositório para a máquina virtual do Actions
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar o ambiente Node.js
      # Instala a versão do Node.js especificada e configura o cache do npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      # 3. Instalar as dependências do projeto
      # Roda 'npm install' para baixar todos os pacotes. O 'ci' é otimizado para ambientes de CI.
      - name: Install dependencies
        run: npm ci

      # 4. Verifica se há testes válidos
      # Se houver prossegue para o próximo passo, caso não haja, não executa o processo de testes
      - name: Check for existence of test files
        id: check_tests
        run: |
          if find . -name "*.test.js" -o -name "*.spec.js" -o -name "__tests__" -print -quit | grep -q .; then
            echo "tests_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "tests_found=false" >> "$GITHUB_OUTPUT"
          fi

      # 5. Rodar os testes com cobertura
      # O '--' é usado para passar o argumento '--coverage' diretamente para o comando 'jest'
      # O Jest irá gerar uma pasta 'coverage' com os resultados
      - name: Run Jest tests with coverage (if tests found)
        if: steps.check_tests.outputs.tests_found == 'true'
        run: npm test

      # 6. Publicar o relatório de cobertura no Pull Request
      # Esta Action utiliza o sumário de cobertura gerado pelo Jest
      # para criar um comentário amigável no PR.
      - name: Generate Jest coverage report comment (if tests found)
        if: steps.check_tests.outputs.tests_found == 'true'
        uses: artiomtr/jest-coverage-report-action@v2
        with:
          # Este token é gerado automaticamente pelo GitHub.
          # É necessário para que a Action possa postar um comentário no PR.
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: ./coverage/coverage-final.json
          pass-threshold: 0
          fail-threshold: 0
          hide-comment: 'empty_coverage'